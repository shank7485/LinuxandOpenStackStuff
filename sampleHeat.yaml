heat_template_version: 2016-04-08

description: Template for the forth lab

parameters:
   instance_flavor:
    type: string
    label: Instance Flavor
    description: Instance Flavor to be used.
    constraints:
      - allowed_values:
        - m1.tiny
        - m1.small
    default: m1.tiny

   instance_image:
    type: string
    label: Instance Image
    description: Instance image to be used.
    default: cirros

   external_network:
    type: string
    label: External Network
    description: External network for outside connectivity.

resources:

  private_network:
    type: OS::Neutron::Net
    properties:
      name: private

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: private-subnet
      network_id: { get_resource: private_network }
      cidr: 10.10.0.0/28
      dns_nameservers:
        - 8.8.8.8

  security_group_rules:
    type: OS::Neutron::SecurityGroup
    properties:
      name: security_group_rules
      rules:
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: icmp
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: external_network }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

  my_instance1:
    type: OS::Nova::Server
    # To avoid race condition
    depends_on: private_subnet
    properties:
      flavor: { get_param: instance_flavor }
      image: { get_param: instance_image }
      networks: [ "network": { get_resource: private_network } ]
      security_groups:
        - { get_resource: security_group_rules }

  my_instance2:
    type: OS::Nova::Server
    # To avoid race condition
    depends_on: private_subnet
    properties:
      flavor: { get_param: instance_flavor }
      image: { get_param: instance_image }
      networks: ["network": { get_resource: private_network } ]
      security_groups:
        - { get_resource: security_group_rules }

outputs:
  instance_private_ip1:
    description: Private IP address of the deployed compute instance
    value: { get_attr: [my_instance1, networks, private, 0] }
  instance_private_ip2:
    description: Private IP address of the deployed compute instance
    value: { get_attr: [my_instance2, networks, private, 0] }
